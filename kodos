#!/usr/bin/env python
# -*- coding: utf-8 -*-
#  kodos.py: -*- Python -*-  DESCRIPTIVE TEXT.

import sys
import os
import getopt

try:
    from PyQt4 import QtGui
    from PyQt4 import QtCore
except:
    sys.exit("""Could not locate the PyQt module.  Please make sure that
you have installed PyQt for the version of Python that you are running.""")

### make sure that this script can find kodos specific modules ###
from distutils.sysconfig import get_python_lib
sys.path.append(os.path.join(get_python_lib(), "kodos"))

from modules.main import Kodos
from modules.util import findFile

def usage():
    print "kodos.py [-f filename | --file=filename ] [ -d debug | --debug=debug ] [ -k kodos_dir ]"
    print
    print "  -f filename | --filename=filename  : Load filename on startup"
    print "  -d debug | --debug=debug           : Set debug to this debug level"
    print "  -k kodos_dir                       : Path containing Kodos images & help subdirs"
    print "  -l locale | --locale=locale        : 2-letter locale (eg. en)"
    print
    sys.exit(0)

def main():
    filename  = None
    debug     = 0
    kodos_dir = os.path.join(sys.prefix, "kodos")
    locale    = None

    args = sys.argv[1:]
    try:
        (opts, getopts) = getopt.getopt(args, 'd:f:k:l:?h',
                                        ["file=", "debug=",
                                         "help", "locale="])
    except:
        print "\nInvalid command line option detected."
        usage()

    for opt, arg in opts:
        if opt in ('-h', '-?', '--help'):
            usage()
        if opt == '-k':
            kodos_dir = arg
        if opt in ('-d', '--debug'):
            try:
                debug = int(arg)
            except:
                print "debug value must be an integer"
                usage()
        if opt in ('-f', '--file'):
            filename = arg
        if opt in ('-l', '--locale'):
            locale = arg

    os.environ['KODOS_DIR'] = kodos_dir

    qApp = QtGui.QApplication(sys.argv)
    qApp.setOrganizationName("kodos")
    qApp.setApplicationName("kodos")
    qApp.setOrganizationDomain("kodos.sourceforge.net")

    if locale not in (None, 'en'):
        localefile = "kodos_%s.qm" % (locale or QtCore.QTextCodec.locale())
        localepath = findFile(os.path.join("translations", localefile))
        if debug:
            print "locale changed to:", locale
            print localefile
            print localepath

        translator = QtCore.QTranslator(qApp)
        translator.load(localepath)

        qApp.installTranslator(translator)

    kodos = Kodos(filename, debug)

    kodos.show()

    sys.exit(qApp.exec_())



if __name__ == '__main__':
    main()
